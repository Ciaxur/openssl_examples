# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;


# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
  log_format  main_tls  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"'
                    '[Request time: $request_time] '
                    '"Client [fingerprint: $ssl_client_fingerprint] '
                            '[DN: $ssl_client_s_dn] '
                            '[Verified: $ssl_client_verify]';

  error_log  /var/log/nginx/error.log info;

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   65;
  types_hash_max_size 4096;

  include             /etc/nginx/mime.types;
  default_type        application/octet-stream;

  # Load modular configuration files from the /etc/nginx/conf.d directory.
  # See http://nginx.org/en/docs/ngx_core_module.html#include
  # for more information.
  include /etc/nginx/conf.d/*.conf;

  # Rate Limiter for 5 Requests/Second
  limit_req_zone $binary_remote_addr zone=ip:10m rate=5r/s;

  # Rate Limit Config
  #  10 MAX Requests, otherwise Reject
  #  First 5 Request without Delay
  #  Delay Added (5r/s) after 5 Excessive Requests
  limit_req zone=ip burst=10 delay=5;

  # Basic server.
  server {
    listen 9000 ssl http2;
    server_name localhost;

    # Use the mtls access log.
    access_log /var/log/nginx/tls_access.log main_tls;

    # TLS configuration (client <-> nginx-sever).
    ssl_certificate /app/secrets/nginx_server/server/server.crt;
    ssl_certificate_key /app/secrets/nginx_server/server/server.key;
    ssl_dhparam /app/secrets/dh.pem;

    # Additional configs.
    keepalive_timeout   70;

    # Mutual trust with client (CA which signed the client's certificate).
    ssl_client_certificate /app/secrets/nginx_client/ca/client_ca.crt;
    ssl_verify_client on;

    location / {
      proxy_pass https://localhost:9001;

      # Mutual TLS between nginx and downstream server.
      # Nginx's client credentials.
      proxy_ssl_certificate /app/secrets/nginx_client/client/client.crt;
      proxy_ssl_certificate_key /app/secrets/nginx_client/client/client.key;

      # NOTE: nginx doesn't allow CA's with 'SSL server: yes' to be used for verifying
      # nginx-client <-> downstream server mTLS.
      # See `openssl x509 -purpose -in <file>.crt`.
      proxy_ssl_trusted_certificate /app/secrets/nginx_server/ca/server_ca.crt;
      proxy_ssl_verify on;
    }
  }
}
